<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS766 Project</title>
    <link>https://dcompgriff.github.io/ML_OD_Benchmarking/</link>
    <description>Recent content on CS766 Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Apr 2018 13:50:46 +0200</lastBuildDate>
    
	<atom:link href="https://dcompgriff.github.io/ML_OD_Benchmarking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deep object detection network benchmarking and sensitivity analysis.</title>
      <link>https://dcompgriff.github.io/ML_OD_Benchmarking/post/deep-object-detection-benchmarking/</link>
      <pubDate>Mon, 23 Apr 2018 13:50:46 +0200</pubDate>
      
      <guid>https://dcompgriff.github.io/ML_OD_Benchmarking/post/deep-object-detection-benchmarking/</guid>
      <description>Introduction Deep object detection methods represent the pinnacle of cutting edge object detection methods.
Background Dealing with object in images can loosely be broken down into 4 main categories (at the time of making this post anyways). The first method of dealing with objects in images is &amp;ldquo;Object Classification&amp;rdquo;. In this task, an entire image is taken to represent a single kind of object, and the goal is to classify the image.</description>
    </item>
    
  </channel>
</rss>